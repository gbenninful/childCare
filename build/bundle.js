!function(){"use strict";function e(e,t){e.state("home",{url:"/",templateUrl:"app/home/home.html",controller:"HomeController",controllerAs:"vm"}).state("child",{url:"/child",templateUrl:"app/child/child.html",controller:"ChildController",controllerAs:"vm"}),t.otherwise("/")}angular.module("childCare",["ui.router"]).config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";module.exports=function(){var e=require("express"),t=e(),s=require("body-parser"),n=process.env.NODE_ENV,o=require("morgan"),r=require("mongoose"),i=process.env.PORT||3e3;t.use(s.urlencoded({extended:!0})),t.use(s.json()),t.use(o("dev")),console.log("About to crank up node"),console.log("PORT = "+i),r.connect("mongodb://localhost/childCare");var l=r.connection;l.on("error",console.error.bind(console,"connection error...")),l.once("open",function(){console.log("childCare db is opened")});var a=r.Schema({message:String}),c=r.model("Message",a);switch(c.findOne().exec(function(e,t){}),n){case"build":console.log("*** BUILD ***"),console.log("Environment: ",n),t.use(e["static"]("./build/")),t.use("/*",e["static"]("build/index.html"));break;default:console.log("*** DEV ***"),console.log("Environment: ",n),t.use(e["static"]("./src/client/")),t.use(e["static"]("./")),t.use(e["static"]("./tmp")),t.use(e["static"]("./src/client/index.html"))}return t.listen(i,function(){console.log("Express server listening on port "+i),console.log("Env = "+t.get("env")+"\n__dirname = "+__dirname+"\nprocess.cwd = "+process.cwd())}),t}}(),function(){"use strict";angular.module("childCare").controller("ChildController",["$scope",function(e){var t=this;t.name="Hello child #1"}])}(),function(){"use strict";angular.module("childCare").controller("HomeController",["$scope",function(e){var t=this;t.name="Hello there. Welcome!"}])}(),describe("Unit: HomeController",function(){var e;beforeEach(angular.mock.module("ChildCare")),beforeEach(inject(function(t,s){e=s("HomeController",{$scope:t.$new()})})),it("should have a name",function(){expect(e.name).toEqual("Hello there")})}),module.exports=function(){"use strict";var e="./src/client/",t=e+"app/",s="./",n="./src/server/",o="./.tmp/",r={allJs:["./src/**/*.js","./*.js"],bower:{bowerJson:require("./bower.json"),directory:"./bower_components/",ignorePath:"../.."},browserReloadDelay:1e3,build:"./build/",client:e,css:o+"styles.css",html:t+"**/*.html",htmltemplates:t+"**/*.html",images:e+"images/**/*.*",index:e+"index.html",js:[e+"**/*.js",t+"**/*.js","!"+e+"test/**/*.js"],optimized:{app:"app.js",lib:"lib.js"},packages:["./package.json","./bower.json"],root:s,sass:e+"styles/styles.scss",server:n,temp:o,templateCache:{file:"templates.js",options:{module:"childCare",standAlone:!1,root:"app/"}},defaultPort:3e3,nodeServer:"./src/server/server.js"};return r.getWiredepDefaultOptions=function(){var e={bowerJson:r.bower.json,directory:r.bower.directory,ignorePath:r.bower.ignorePath};return e},r},function(){"use strict";function e(e){var t=new RegExp("/.*(?=/"+a.source+")/");s("File "+e.path.replace(t,"")+" "+e.type)}function t(e,t){s("Cleaning: "+p.util.colors.blue(e)),c(e,t())}function s(e){if("object"==typeof e)for(var t in e)e.hasOwnProperty(t)&&p.util.log(p.util.colors.blue(e[t]));else p.util.log(p.util.colors.blue(e))}function n(e){var t={script:a.nodeServer,delayTime:1,env:{PORT:u,NODE_ENV:e?"dev":"build"},watch:[a.server]};return p.nodemon(t).on("restart",function(e){s("*** Nodemon restarted ***"),s("files changed on restart:\n"+e),setTimeout(function(){l.notify("Reloading now ..."),l.reload({stream:!1})},a.browserReloadDelay)}).on("start",function(){s("*** Nodemon started ***"),o(e)}).on("crash",function(){s("*** Nodemon crashed: script crashed for some reason ***")}).on("exit",function(){s("*** Nodemon exited cleanly ***")})}function o(t){if(!i.nosync&&!l.active){s("Starting borwser-sync on port "+u),t?r.watch([a.sass],["styles"]).on("change",function(t){e(t)}):r.watch([a.sass,a.js,a.html],["optimize",l.reload]).on("change",function(t){e(t)});var n={proxy:"localhost:"+u,port:5e3,files:t?[a.client+"**/*.*",a.temp+"**/*.css","!"+a.sass]:[],ghostMode:{clicks:!0,location:!1,forms:!0,scroll:!0},injectChanges:!0,logFileChanges:!0,logLevel:"debug",logPrefix:"gulp-patterns",modify:!0,reloadDelay:0};l(n)}}var r=require("gulp"),i=require("yargs").argv,l=require("browser-sync"),a=require("./gulpConfig")(),c=require("del"),p=(process.env.NODE_ENV,require("gulp-minify-css"),require("gulp-load-plugins")({lazy:!0,camelize:!0})),u=process.env.PORT||a.defaultPort;r.task("build",function(){}),r.task("bump",function(){var e="Bumping versions",t={},n=i.type,o=i.version;return o?(t.version=o,e+=" to "+o):(t.type=n,e+=" for a "+n),s(e),r.src(a.packages).pipe(p.print).pipe(p.bump(t)).pipe(r.dest(a.root))}),r.task("bundlejs",function(){return s("Concatenating, annotating and minifying all our custom JS files"),r.src(a.allJs).pipe(p.concat("bundle.js")).pipe(p.uglify()).pipe(r.dest(a.build))}),r.task("clean",function(e){var t=[].concat(a.build,a.temp);s("Cleaning: "+p.util.colors.blue(t)),c(t,e())}),r.task("clean-code",function(e){var s=[].concat(a.temp+"**/*.js",a.build+"**/*.html",a.build+"js/**/*.js");t(s,e)}),r.task("clean-fonts",function(e){t(a.build+"fonts/**/*.*",e)}),r.task("clean-images",function(e){t(a.build+"images/**/*.*",e)}),r.task("clean-styles",function(e){t(a.temp+"**/*.css",e)}),r.task("default",["help"]),r.task("help",p.taskListing),r.task("fonts",["clean-fonts"],function(){return s("Copying fonts to build folder"),r.src(a.fonts).pipe(r.dest(a.build+"fonts"))}),r.task("images",["clean-images"],function(){return s("Copying and compressing images"),r.src(a.images).pipe(p.imagemin({optimizationLevel:4})).pipe(r.dest(a.build+"images"))}),r.task("inject",["wiredep","styles","templatecache"],function(){return s("wire up the app css into the html, and call wiredep"),r.src(a.index).pipe(p.inject(r.src(a.css))).pipe(r.dest(a.client))}),r.task("lint",function(){return s("Analyzing source with JSHint and JSCS"),r.src(a.allJs).pipe(p.ngAnnotate()).pipe(p["if"](i.verbose,p.print())).pipe(p.jshint()).pipe(p.jshint.reporter("jshint-stylish",{verbose:!0}))}),r.task("optimize",["inject"],function(){s("Optimizing the JavaScript, CSS and HTML files");var e=p.useref.assets({searchPath:"./"}),t=(p.filter("**/*.css",{restore:!0,passthrough:!1}),p.filter("**/"+a.optimized.lib),p.filter("**/"+a.optimized.app),a.temp+a.templateCache.file);return r.src(a.index).pipe(p.plumber()).pipe(p.inject(r.src(t,{read:!1}),{starttag:"<!-- inject:templates:js -->"})).pipe(e).pipe(p["if"]("*.css",p.csso())).pipe(p["if"]("*.js",p.ngAnnotate())).pipe(p["if"]("*.js",p.uglify())).pipe(p.rev()).pipe(e.restore()).pipe(p.useref()).pipe(r.dest(a.build)).pipe(p.rev.manifest()).pipe(r.dest(a.build))}),r.task("run",["build"],function(){}),r.task("sass-watcher",function(){r.watch([a.sass],["styles"])}),r.task("serve",["styles"],function(){require("./src/server/server.js")()}),r.task("serve-build",function(){n(!1)}),r.task("serve-dev",["inject"],function(){n(!0)}),r.task("styles",["clean-styles"],function(){return s("Compiling Sass to CSS"),r.src(a.sass).pipe(p.plumber()).pipe(p.sass()).pipe(p.autoprefixer({browser:["last 2 version","> 5%"]})).pipe(r.dest(a.temp))}),r.task("templatecache",["clean-code"],function(){return s("Creating AngularJS $templateCache"),r.src(a.htmltemplates).pipe(p.minifyHtml({empty:!0})).pipe(p.angularTemplatecache(a.templateCache.file,a.templateCache.options)).pipe(r.dest(a.temp))}),r.task("test",function(e){var t=require("karma").Server;new t({configFile:__dirname+"/karma.conf.js",singleRun:!0},function(){}).start()}),r.task("wiredep",function(){s("Wire up the bower css and our app js into the html");var e=a.getWiredepDefaultOptions(),t=require("wiredep").stream;return r.src(a.index).pipe(t(e)).pipe(p.inject(r.src(a.js))).pipe(r.dest(a.client))})}(),module.exports=function(e){e.set({basePath:"",frameworks:["jasmine"],files:["./node_modules/angular/angular.js","./node_modules/angular-mocks/angular-mocks.js"],exclude:[],preprocessors:{},browserify:{debug:!0},reporters:["progress"],port:9876,colors:!0,logLevel:e.LOG_INFO,autoWatch:!0,browsers:["Chrome"],singleRun:!1})};